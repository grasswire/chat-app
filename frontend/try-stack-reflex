#!/usr/bin/env bash
set -e

BASE="$1"

setup_ghcjsi() {
    git clone -b ghcjsi https://github.com/ghcjs/ghcjs.git
    cd ghcjs
    git apply <<'EOF'
diff --git a/ghcjs.cabal b/ghcjs.cabal
index f949455..893c3b9 100644
--- a/ghcjs.cabal
+++ b/ghcjs.cabal
@@ -1,5 +1,5 @@
 Name:           ghcjs
-Version:        0.2.0
+Version:        0.2.0.20151007
 Description:    Haskell to JavaScript compiler
 License:        MIT
 License-file:   LICENSE
diff --git a/utils/update_archives.sh b/utils/update_archives.sh
index f777ffa..395c83c 100755
--- a/utils/update_archives.sh
+++ b/utils/update_archives.sh
@@ -139,25 +139,27 @@ STATUS=`git status --porcelain`
 if [ ${#STATUS} -gt 0 ]
 then
     echo "working tree is dirty, run from a clean working tree"
-    exit 1
+    # exit 1
 fi
 
 # This is a simulation of git symbolic-ref --short -q HEAD, which doesn't work with
 # older versions of git.  The --short option is supported by git-1.9.1.
-if BRANCH=$(git symbolic-ref -q HEAD | sed 's:^.*/\([^/]*\)$:\1:')
-then
-    echo "using git branch: ${BRANCH}"
-else
-    echo "not on a git branch, aborting"
-    exit 1
-fi
+# if BRANCH=$(git symbolic-ref -q HEAD | sed 's:^.*/\([^/]*\)$:\1:')
+# then
+#     echo "using git branch: ${BRANCH}"
+# else
+#     echo "not on a git branch, aborting"
+#     exit 1
+# fi
+SHIM_COMMIT=f17d10cf47450fe4e00433e988db0bddddb35cc0
+BOOT_COMMIT=39cd58e12f02fa99f493387ba4c3708819a72294
 
 echo "preparing boot and shims cache in ${BUILDDIR}"
 ( cd "${BUILDDIR}"
   # collect shims
   ( git clone "${SHIMS_ORIGIN}"
     cd shims
-    git checkout "${BRANCH}"
+    git checkout "${SHIM_COMMIT}"
     cd ..
     echo "${SHIMS_EXCLUDE}" > shims.exclude
     tar -X shims.exclude -cf shims.tar shims
@@ -166,7 +168,7 @@ echo "preparing boot and shims cache in ${BUILDDIR}"
   # prepare ghcjs-boot repository
   ( git clone "${BOOT_ORIGIN}"
     cd ghcjs-boot
-    git checkout "${BRANCH}"
+    git checkout "${BOOT_COMMIT}"
     git submodule update --init --recursive
     prepare_packages "boot"
     
EOF
}

if [ "$BASE" = "old" ]; then
    export STACK_YAML=stack-ghcjs-old-base.yaml
    if [ ! -d "reflex-dom" ]; then
        git clone -b develop https://github.com/ryantrinkle/reflex-dom.git
    fi
    sed -i.bak -e "s/bifunctors == 4\.2\.\*/bifunctors >= 4\.2/g" reflex-dom/reflex-dom.cabal
elif [ "$BASE" = "ghcjsi" ]; then
    if [ ! -d "ghcjs" ]; then
        setup_ghcjsi
        stack sdist
        ghcjs_path=$(pwd)
        cd $(stack path --dist-dir)
        nohup python -m SimpleHTTPServer &
        server_pid=$!
        cd $ghcjs_path
        cd ..
    fi
    export STACK_YAML=stack-ghcjsi-improved-base.yaml
else
    export STACK_YAML=stack-ghcjs-improved-base.yaml
fi


stack setup
if [ -x "$server_pid" ]; then
    kill "$server_pid"
fi
stack build

open_exe=$(which open)
local_install_root=$(stack path --local-install-root)
if [ -x "$open_exe" ]; then
    $open_exe "$local_install_root/bin/reflex-todomvc.jsexe/index.html"
fi
